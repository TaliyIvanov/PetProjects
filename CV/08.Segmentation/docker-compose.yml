services:
  api:
    image: segmentation-api-dev
    build: .
    container_name: segmentation_service
    restart: unless-stopped
    ports:
      - "8000:8000"
    # command: uvicorn main:app --host 0.0.0.0 --port 8000
    volumes:
      - ./src:/app/src
      - ./configs:/app/configs
      - ./best_model_linknet.pth:/app/best_model_linknet.pth # подключаем веса модели, чтобы не вшивать в образ
    # depends_on:
    #   - airflow-webserver

  # airflow-webserver:
  #   image: apache/airflow:2.7.1
  #   environment:
  #     - AIRFLOW__CORE__EXECUTOR=LocalExecutor
  #     - AIRFLOW__CORE__LOAD_EXAMPLES=False
  #     - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=sqlite:///airflow.db
  #   ports:
  #     - "8080:8080"
  #   volumes:
  #     - ./dags:/opt/airflow/dags
  #   command: webserver

  # airflow-scheduler:
  #   image: apache/airflow:2.7.1
  #   environment:
  #     - AIRFLOW__CORE__EXECUTOR=LocalExecutor
  #     - AIRFLOW__CORE__LOAD_EXAMPLES=False
  #     - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=sqlite:///airflow.db
  #   volumes:
  #     - ./dags:/opt/airflow/dags
  #   depends_on:
  #     - airflow-webserver
  #   command: scheduler

  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus # for saves between starts
    ports:
      - "9090:9090"
    depends_on:
      - api

  grafana:
    image: grafana/grafana:9.5.3
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

# volumes for save data
volumes:
  prometheus_data:
  grafana_data: